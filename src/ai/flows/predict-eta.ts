// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Predicts the estimated time of arrival (ETA) of a bus at a given stop.
 *
 * - predictETA - A function that predicts the ETA of a bus at a given stop.
 * - PredictETAInput - The input type for the predictETA function.
 * - PredictETAOutput - The return type for the predictETA function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PredictETAInputSchema = z.object({
  busId: z.string().describe('The ID of the bus.'),
  stopId: z.string().describe('The ID of the stop.'),
  currentLatitude: z.number().describe('The current latitude of the bus.'),
  currentLongitude: z.number().describe('The current longitude of the bus.'),
  historicalData: z
    .string()
    .describe(
      'Historical data of bus arrival times at this stop, as a JSON string.'
    ),
  trafficConditions: z
    .string()
    .describe('Current traffic conditions, as a JSON string.'),
});
export type PredictETAInput = z.infer<typeof PredictETAInputSchema>;

const PredictETAOutputSchema = z.object({
  estimatedArrivalTime: z
    .string()
    .describe(
      'The estimated time of arrival (ETA) in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ).'
    ),
  confidence: z.number().describe('The confidence level of the prediction (0-1).'),
  reasoning: z.string().describe('The reasoning behind the ETA prediction.'),
});
export type PredictETAOutput = z.infer<typeof PredictETAOutputSchema>;

export async function predictETA(input: PredictETAInput): Promise<PredictETAOutput> {
  return predictETAFlow(input);
}

const predictETAPrompt = ai.definePrompt({
  name: 'predictETAPrompt',
  input: {schema: PredictETAInputSchema},
  output: {schema: PredictETAOutputSchema},
  prompt: `You are an expert in predicting bus arrival times.

  Given the following information, predict the estimated time of arrival (ETA) of the bus at the stop.

  Bus ID: {{{busId}}}
  Stop ID: {{{stopId}}}
  Current Latitude: {{{currentLatitude}}}
  Current Longitude: {{{currentLongitude}}}
  Historical Data: {{{historicalData}}}
  Traffic Conditions: {{{trafficConditions}}}

  Provide the ETA in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ).
  Also, provide a confidence level (0-1) for your prediction and explain your reasoning.

  The output should be a JSON object with the following format:
  {
    "estimatedArrivalTime": "YYYY-MM-DDTHH:mm:ssZ",
    "confidence": 0.85,
    "reasoning": "Based on historical data and current traffic conditions, the bus is expected to arrive in 10 minutes."
  }`,
});

const predictETAFlow = ai.defineFlow(
  {
    name: 'predictETAFlow',
    inputSchema: PredictETAInputSchema,
    outputSchema: PredictETAOutputSchema,
  },
  async input => {
    const {output} = await predictETAPrompt(input);
    return output!;
  }
);
